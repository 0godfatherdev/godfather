export const initializeTemplate = `
Extract the details for initializing the GitHub repository:
- **owner** (string): The owner of the GitHub repository (e.g., "octocat")
- **repo** (string): The name of the GitHub repository (e.g., "hello-world")
- **branch** (string): The branch of the GitHub repository (e.g., "main")

Provide the repository details in the following JSON format:

\`\`\`json
{
    "owner": "<owner>",
    "repo": "<repo>",
    "branch": "<branch>"
}
\`\`\`

Here are the recent user messages for context:
{{recentMessages}}
`;

export const createMemoriesFromFilesTemplate = `
Extract the details for creating memories from files in the GitHub repository:
- **owner** (string): The owner of the GitHub repository (e.g., "octocat")
- **repo** (string): The name of the GitHub repository (e.g., "hello-world")
- **path** (string): The path to the files in the GitHub repository (e.g., "docs/")

Provide the repository details in the following JSON format:

\`\`\`json
{
    "owner": "<owner>",
    "repo": "<repo>",
    "path": "<path>"
}
\`\`\`

Here are the recent user messages for context:
{{recentMessages}}
`;

export const createPullRequestTemplate = `
Extract the details for creating a pull request in the GitHub repository:
- **owner** (string): The owner of the GitHub repository (e.g., "octocat")
- **repo** (string): The name of the GitHub repository (e.g., "hello-world")
- **branch** (string): The branch of the GitHub repository (e.g., "main")
- **title** (string): The title of the pull request (e.g., "Add new documentation")
- **description** (string): The description of the pull request (optional)
- **files** (array): An array of files to commit with their content

Provide the pull request details in the following JSON format:

\`\`\`json
{
    "owner": "<owner>",
    "repo": "<repo>",
    "branch": "<branch>",
    "title": "<title>",
    "description": "<description>"
    "files": [
        {
            "path": "<path>",
            "content": "<content>"
        }
    ]
}
\`\`\`

Here are the recent user messages for context:
{{recentMessages}}
`;

export const createCommitTemplate = `
Extract the details for creating a commit in the GitHub repository:
- **owner** (string): The owner of the GitHub repository (e.g., "octocat")
- **repo** (string): The name of the GitHub repository (e.g., "hello-world")
- **branch** (string): The branch of the GitHub repository (e.g., "main")
- **message** (string): The commit message (e.g., "Update documentation")
- **files** (array): An array of files to commit with their content

Provide the commit details in the following JSON format:

\`\`\`json
{
    "owner": "<owner>",
    "repo": "<repo>",
    "branch": "<branch>",
    "message": "<message>",
    "files": [
        {
            "path": "<path>",
            "content": "<content>"
        }
    ]
}
\`\`\`

Here are the recent user messages for context:
{{recentMessages}}
`;

export const fetchFilesTemplate = `
Extract the details for fetching files from the GitHub repository:
- **owner** (string): The owner of the GitHub repository (e.g., "octocat")
- **repo** (string): The name of the GitHub repository (e.g., "hello-world")
- **branch** (string): The branch of the GitHub repository (e.g., "main")

Provide the repository details in the following JSON format:

\`\`\`json
{
    "owner": "<owner>",
    "repo": "<repo>",
    "branch": "<branch>"
}
\`\`\`

Here are the recent user messages for context:
{{recentMessages}}
`;

export const createIssueTemplate = `
Extract the details for creating a GitHub issue and fill in the issue template with additional details:

Here is the original request:
{{memory}}

Please use the related files to provide context and fill in the issue template with additional details:
{{files}}

Try to integrate examples using the files provided to explain details of the issue.

Ensure that the title, body, and labels are generated based on the character's goals and the user's request without changing the owner and repo.

And fill in the relevant labels as it makes sense
- **owner** (string): The owner of the GitHub repository (e.g., "octocat")
- **repo** (string): The name of the GitHub repository (e.g., "hello-world")
- **title** (string): The title of the issue (e.g., "Add new documentation")
- **body** (string): The body of the issue (e.g., "Add new documentation")
- **labels** (array): The labels of the issue (optional)

Please fill in the issue template for the body of the issue generated by the agent.

If it is a bug report use:

**Describe the bug**

<!-- A clear and concise description of what the bug is. -->

**To Reproduce**

<!-- Steps to reproduce the behavior. -->

**Expected behavior**

<!-- A clear and concise description of what you expected to happen. -->

**Screenshots**

<!-- If applicable, add screenshots to help explain your problem. -->

**Additional context**

<!-- Add any other context about the problem here. -->

If it is a feature request use:

**Is your feature request related to a problem? Please describe.**

<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->

**Describe the solution you'd like**

<!-- A clear and concise description of what you want to happen. -->

**Describe alternatives you've considered**

<!-- A clear and concise description of any alternative solutions or features you've considered. -->

**Additional context**

<!-- Add any other context or screenshots about the feature request here. -->

Provide the issue details in the following JSON format:

\`\`\`json
{
    "owner": "<owner>",
    "repo": "<repo>",
    "title": "<title>",
    "body": "<body>",
    "labels": ["<label1>", "<label2>"]
}
\`\`\`

Here are the recent user messages for context:
{{recentMessages}}
`;

export const modifyIssueTemplate = `
Extract the details for modifying a GitHub issue and ensure the modifications align with the character's goals and the user's request:
- **owner** (string): The owner of the GitHub repository (e.g., "octocat")
- **repo** (string): The name of the GitHub repository (e.g., "hello-world")
- **issue_number** (number): The number of the issue (e.g., 1)
- **title** (string): The title of the issue (e.g., "Add new documentation") (optional)
- **body** (string): The body of the issue (e.g., "Add new documentation") (optional)
- **state** (string): The state of the issue (e.g., "open", "closed") (optional)
- **labels** (array): The labels of the issue (optional)

Ensure that the modifications are consistent with the character's objectives and the user's request without altering the owner and repo.

Here is the original request:
{{memory}}

Please use the related files to provide context and fill in the issue template with additional details:
{{files}}

Try to integrate examples using the files provided to explain details of the issue.

Ensure that the title, body, and labels are generated based on the character's goals and the user's request without changing the owner and repo.

Please do not change the issue number, owner, repo.

Provide the issue details in the following JSON format:

\`\`\`json
{
    "owner": "<owner>",
    "repo": "<repo>",
    "issue_number": "<issue_number>",
    "title": "<title>",
    "body": "<body>",
    "state": "<state>",
    "labels": ["<label1>", "<label2>"]
}
\`\`\`

Here are the recent user messages for context:
{{recentMessages}}
`;

export const addCommentToIssueTemplate = `
Extract the details for adding a comment to a GitHub issue and ensure the comment aligns with the character's goals and the user's request:
- **owner** (string): The owner of the GitHub repository (e.g., "octocat")
- **repo** (string): The name of the GitHub repository (e.g., "hello-world")
- **issue_number** (number): The number of the issue (e.g., 1)
- **comment** (string): The comment to add (e.g., "Add new documentation")

Ensure that the comment is consistent with the character's objectives and the user's request without altering the owner and repo.

Here is the original request:
{{memory}}

Please use the related files to provide context and fill in the issue template with additional details:
{{files}}

Try to integrate examples using the files provided to explain details of the issue.

Ensure that the comment is generated based on the character's goals and the user's request without changing the owner and repo.

Provide the comment details in the following JSON format:

\`\`\`json
{
    "owner": "<owner>",
    "repo": "<repo>",
    "issue_number": "<issue_number>",
    "comment": "<comment>"
}
\`\`\`

Here are the recent user messages for context:
{{recentMessages}}
`;

// Initialize the repository ai16z/eliza on develop branch
// Create memories from file on repository ai16z/eliza at path '/packages/plugin-coinbase'
// Create an issue in repository ai16z/eliza titled about improving logging in /packages/plugin-github/plugins
// pnpm build && pnpm start
